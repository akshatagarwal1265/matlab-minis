%% Cutting Out White Shaded Region from Original Unshaded Image

%% Note
%PNG only
%MATLAB isn't reading JPEG precisely sometimes

%% Initialization
clear; close all; clc;

%% User Inputs

%Getting Unshaded Image (via Dialog Box)
[FileName1,PathName1]=uigetfile({'*.jpg;*.jpeg;*.png','Acceptable Types'},...
    'Select the UNSHADED Image file:');
UnshadedImage=fullfile(PathName1,FileName1);
if isequal(FileName1,0)
    disp('*** Selection Cancelled, Terminating Program ***')
    return
else
    disp(UnshadedImage);
end

%Getting White Shaded Image (via Dialog Box)
[FileName2,PathName2]=uigetfile({'*.jpg;*.jpeg;*.png','Acceptable Types'},...
    'Select the SHADED Image file:');
ShadedImage=fullfile(PathName2,FileName2);
if isequal(FileName2,0)
    disp('*** Selection Cancelled, Terminating Program ***')
    return
else
    disp(ShadedImage);
end

%% Read User Inputs

%Read input files
unshaded = imread(UnshadedImage);
shaded = imread(ShadedImage);

%% Cut-out

%Whitened-Unshaded, leaves cut-out area above black (cut-out-region), rest is left black (to-be-discarded)
%White portions in cut-out region are also left black (This is balanced by providing white background in output)
%Pixels which are black (to-be-discarded) will be converted to 255
%Pixels which are non-black (cut-out-region) will be converted to 0
%binaryImageInv will be used as a mask
diff = shaded-unshaded;                        %Some noise is being generated by MATLAB for JPEG pictures for some reason
diff2D = uint8( sum(diff,3) );
binaryImageInv = uint8( diff2D <= 0 ) * 255;   %Tolerating 0 units of disturbance in RGB layers each

%Converting binaryImage dimension same as input 3D image
binaryImageInv3D=cat(3,binaryImageInv,binaryImageInv,binaryImageInv);

%All pixels of original image where binaryImage3DInv is 255 (to-be-discarded), are made 255 or above
%All pixels of original image where binaryImage3DInv is 0 (cut-out-region), are left as is
%Hence ADD
result = uint8( unshaded+binaryImageInv3D ); %Cells valued above 255 are truncated to 255

%% Display & Save To File

figure;
imshow(result);

imwrite(result,'Output.png');